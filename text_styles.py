#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
浮动文字桌宠 - 终极增强版文本库
包含超级全面、超级丰富的场景和文本内容
终极版：全面覆盖系统性能监控、用户行为监控、软件特定嘲讽和彩蛋等高级场景
"""

import random
import time
import datetime

class TextStyles:
    def __init__(self):
        # 初始化风格和语气设置
        self.current_style = "funny"  # 默认搞笑风格，小写
        self.current_tone = "normal"  # 默认普通语气，小写
        
        # 初始化文本库
        self._initialize_text_library()
        
    def _initialize_text_library(self):
        """初始化超级全面、超级丰富的文本库"""
        self.library = {
            # 应用场景类别 - 与主程序检测的类别直接对应
            "general": [
                "你好啊，看起来你正在发呆",
                "无聊吗？要不要来玩个游戏？",
                "这么闲，是不是该找点事做了？",
                "发现你在思考人生的奥秘",
                "看你盯着屏幕发呆，是在等灵感吗？",
                "闲着没事干？不如学门新技能",
                "这么悠闲，是不是该喝杯咖啡提神了？",
                "你的眼神告诉我，你需要一个休息",
                "看起来你需要一点灵感的火花",
                "无所事事的时光也很珍贵，享受吧"
            ],
            
            # 编程场景
            "coding": [
                "代码写得不错，就是有点bug",
                "这bug改了一个又来一个，套娃呢？",
                "这代码写得像诗一样，就是读不懂",
                "代码能跑就行，优化是什么？能吃吗？",
                "这注释写得真好，就是没看懂代码是干啥的",
                "这么多bug，是在养蚂蚁农场吗？",
                "代码重构？不存在的，能跑就行",
                "这代码缩进，是在建金字塔吗？",
                "变量命名a1, a2, a3...是想让维护的人崩溃吗？",
                "这函数这么长，是想申请吉尼斯纪录？",
                "单行代码写这么长，显示器不够宽吗？",
                "这么多嵌套，是在玩俄罗斯套娃？",
                "这代码耦合度这么高，是真爱吗？",
                "注释呢？让别人猜你代码意图很有趣？",
                "这么多if-else，是在写决策树？",
                "这代码复用率为零，是独一无二的艺术品",
                "这么多硬编码，是想让未来的自己哭吗？",
                "这代码逻辑，是喝了多少咖啡写出来的？",
                "这递归这么深，是想测试栈有多高？",
                "这么多TODO注释，打算什么时候做？"
            ],
            
            # 浏览器场景
            "browsing": [
                "又在网上冲浪？小心变成海王",
                "这么多标签页，你电脑不崩溃算我输",
                "再开几个标签，内存条就要哭了",
                "看你打开这么多网页，是在做信息收集吗？",
                "这么多标签，找得到自己想要的吗？",
                "浏览器历史记录，是你的秘密花园吧？",
                "又在搜索引擎上问问题？GPT不香吗？",
                "这个网站设计得真丑，设计师是色盲吗？",
                "广告拦截器用了吗？不然眼睛要瞎了",
                "这个网站加载这么慢，是用土豆服务器吗？",
                "无痕模式开了吗？我什么都没看见",
                "这个网站的验证码，是在测试你是不是AI吧？",
                "又在网上购物？钱包要哭了",
                "这个网站的弹窗，是想测试你的关闭速度吗？",
                "看你在社交媒体上刷了这么久，现实社交呢？",
                "这个网站的Cookie提示，是第100个了吧？",
                "又在看猫咪视频？工作不着急吗？",
                "这个网站的字体这么小，是在测试你的视力吗？",
                "浏览器书签栏这么满，找得到东西吗？",
                "这个网站的密码要求，是在测试你的创造力吗？",
                "Chrome开100个标签是想测试量子纠缠？",
                "VPN切来切去，看黄网这么谨慎？",
                "下载小电影卡99%？天道好轮回",
                "无痕浏览？此地无银三百两",
                "需要推荐纸巾品牌吗？",
                "清除历史记录记得勾选所有时间"
            ],
            
            # 视频场景
            "video": [
                "又在看视频摸鱼？老板知道吗？",
                "这个视频这么长，今天工作不用做了？",
                "看你津津有味地看视频，是有多无聊？",
                "这个UP主讲得真不错，就是语速有点快",
                "视频弹幕这么多，看得清画面吗？",
                "这个视频的背景音乐，是想掩盖内容的空洞吗？",
                "看你一直盯着视频，是学习还是放空？",
                "这个视频的特效，是想弥补内容的不足吗？",
                "又在看猫咪视频？工作不着急吗？",
                "这个视频的标题党，是钓到你了吗？",
                "看完这个视频，你学到了什么？",
                "这个视频的广告，是比内容还长吗？",
                "这个视频的剪辑，是剪刀不够锋利吗？",
                "看你一直看视频，是不是该休息一下眼睛了？",
                "这个视频的画质，是用土豆拍的吗？",
                "这个视频的笑点，是需要放大镜找吗？",
                "看你看得这么入迷，是有多好看？",
                "这个视频的逻辑，是打结了吗？",
                "看视频看这么久，脖子不酸吗？",
                "这个视频的结尾，是忘了拍吗？"
            ],
            
            # 办公场景
            "office": [
                "这个PPT做得不错，就是内容有点空",
                "这个Excel表格，是在练习彩虹色吗？",
                "这个Word文档这么长，是在写小说吗？",
                "这个邮件这么长，收件人会看完吗？",
                "这个会议，是为了开会而开会吗？",
                "这个表格的公式，是在测试Excel的极限吗？",
                "这个PPT的动画，是在测试观众的耐心吗？",
                "这个文档的格式，是在测试Word的兼容性吗？",
                "这个邮件的抄送，是要让全公司都知道吗？",
                "这个会议室，是在测试空调的制冷能力吗？",
                "这个表格的数据，是随机生成的吗？",
                "这个PPT的字体这么小，是在测试观众的视力吗？",
                "这个文档的修订，是在玩彩虹色吗？",
                "这个邮件的附件这么大，是想测试服务器容量吗？",
                "这个会议的议程，是临时想出来的吗？",
                "这个表格的行数，是在挑战Excel的极限吗？",
                "这个PPT的背景，是想分散观众注意力吗？",
                "这个文档的页眉页脚，是在练习排版吗？",
                "这个邮件的签名，是比正文还长吗？",
                "这个会议的时间，是故意安排在午饭时间吗？"
            ],
            
            # 游戏场景
            "gaming": [
                "这游戏玩得不错，就是有点菜",
                "这操作，是手滑了吗？",
                "这游戏画质调这么低，是为了显示器续命吗？",
                "这游戏的难度，是在测试你的耐心吗？",
                "这游戏的剧情，是编剧喝多了吗？",
                "这游戏的音效，是用嘴模仿的吗？",
                "这游戏的角色设计，是美术放弃了吗？",
                "这游戏的操作，是在测试你的手速吗？",
                "这游戏的地图，是迷宫设计师做的吗？",
                "这游戏的任务，是在测试你的耐心吗？",
                "这游戏的装备，是随机生成的吗？",
                "这游戏的对话，是机器翻译的吗？",
                "这游戏的战斗系统，是回合制还是即时？分不清了",
                "这游戏的成就，是在测试你的强迫症吗？",
                "这游戏的彩蛋，是藏得太深了吧？",
                "这游戏的结局，是编剧没灵感了吗？",
                "这游戏的加载时间，是在测试你的耐心吗？",
                "这游戏的UI，是实习生设计的吗？",
                "这游戏的教程，是在测试你的理解能力吗？",
                "这游戏的存档系统，是故意设计成这样的吗？",
                "上班时间玩CS？枪法比代码还菜",
                "检测到Steam启动，演技准备：3,2,1...",
                "您已进入老板凝视区域"
            ],
            
            # 系统场景
            "system": [
                "又在摆弄系统设置？是哪里出问题了？",
                "这个系统更新，是在测试你的耐心吗？",
                "这个系统错误，是在测试你的解决能力吗？",
                "这个系统的界面，是设计师审美有问题吗？",
                "这个系统的响应速度，是在模拟龟速吗？",
                "这个系统的兼容性，是在测试你的适应能力吗？",
                "这个系统的安全性，是在测试黑客的能力吗？",
                "这个系统的稳定性，是在测试你的容忍度吗？",
                "这个系统的资源占用，是在测试你的硬件吗？",
                "这个系统的用户体验，是设计师没用过吗？",
                "这个系统的错误提示，是在说人话吗？",
                "这个系统的备份功能，是在测试你的信任吗？",
                "这个系统的隐私设置，是在测试你的耐心吗？",
                "这个系统的自动更新，是在测试你的网速吗？",
                "这个系统的兼容模式，是在怀旧吗？",
                "这个系统的默认设置，是随机生成的吗？",
                "这个系统的帮助文档，是在帮倒忙吗？",
                "这个系统的搜索功能，是在玩捉迷藏吗？",
                "这个系统的通知，是在测试你的注意力吗？",
                "这个系统的休眠模式，是比你睡得还香吗？"
            ],
            
            # 聊天场景
            "chat": [
                "又在聊天？工作不忙吗？",
                "这个聊天记录，是在写小说吗？",
                "这个表情包，是在测试对方的理解能力吗？",
                "这个群聊，是在测试你的社交能力吗？",
                "这个私聊，是有什么不可告人的秘密吗？",
                "这个聊天软件的提示音，是在测试你的条件反射吗？",
                "这个聊天的频率，是在测试对方的耐心吗？",
                "这个语音消息，是在测试对方的听力吗？",
                "这个视频通话，是在测试你的颜值吗？",
                "这个聊天的措辞，是在测试对方的理解能力吗？",
                "这个群名片，是在测试你的创意吗？",
                "这个聊天的时间，是在测试对方的作息吗？",
                "这个红包，是在测试群友的手速吗？",
                "这个聊天记录的长度，是在挑战软件的极限吗？",
                "这个撤回消息，是说错了什么吗？",
                "这个已读不回，是在测试对方的耐心吗？",
                "这个斗图，是在测试你的表情包储备吗？",
                "这个群公告，是有人看吗？",
                "这个聊天置顶，是有多重要？",
                "这个消息免打扰，是不想被打扰还是不想错过？",
                "工作群吹水也算KPI？",
                "收到老板消息，假装没看到是吧",
                "摸鱼时别忘擦掉嘴角的笑意"
            ],
            
            # 音乐场景 - 新增丰富内容
            "music": [
                "听的什么音乐？节奏不错嘛",
                "这歌单品味不错，就是有点小众",
                "这音乐音质，是用土豆录的吗？",
                "这歌的歌词，是AI生成的吗？",
                "这音乐的节奏，是在测试你的心脏吗？",
                "这歌单的风格，是有多种多样啊",
                "这音乐的和声，是在测试你的听力吗？",
                "这歌的旋律，是循环了多少次了？",
                "这音乐的混音，是工程师放弃了吗？",
                "这歌单的长度，是在测试你的耐心吗？",
                "这音乐的低音，是在测试你的音响吗？",
                "这歌的高音，是在测试你的耳膜吗？",
                "这音乐的编曲，是在测试你的音乐素养吗？",
                "这歌的翻唱，是比原唱还好听吗？",
                "这音乐的现场版，是在测试歌手的实力吗？",
                "这歌的MV，是预算不够了吗？",
                "这音乐的前奏，是有多长啊？",
                "这歌的间奏，是忘了写歌词吗？",
                "这音乐的结尾，是淡出太久了吧？",
                "这歌的伴奏，是在抢主唱的戏吗？",
                # Apple Music专属
                "Apple Music的推荐，是了解你的品味吗？",
                "Apple Music的空间音频，是在测试你的耳机吗？",
                "Apple Music的歌词同步，是在测试你的阅读速度吗？",
                "Apple Music的封面，是比音乐还好看吗？",
                "Apple Music的订阅费，是在测试你的钱包吗？",
                # 酷狗音乐专属
                "酷狗音乐的音质，是在测试你的耳朵吗？",
                "酷狗音乐的广告，是比歌还长吗？",
                "酷狗音乐的会员，是在测试你的钱包吗？",
                "酷狗音乐的歌单推荐，是了解你的品味吗？",
                "酷狗音乐的UI，是在测试你的眼睛吗？",
                # 网易云音乐专属
                "网易云音乐的评论，是比歌词还走心吗？",
                "网易云音乐的推荐，是在测试你的音乐品味吗？",
                "网易云音乐的日推，是有多了解你？",
                "网易云音乐的歌单，是在测试你的收藏癖吗？",
                "网易云音乐的社区，是在测试你的社交能力吗？",
                # QQ音乐专属
                "QQ音乐的音质，是在测试你的耳朵吗？",
                "QQ音乐的付费歌曲，是在测试你的钱包吗？",
                "QQ音乐的MV，是在测试你的流量吗？",
                "QQ音乐的歌词，是在测试你的阅读能力吗？",
                "QQ音乐的推荐，是了解你的品味吗？",
                # Spotify专属
                "Spotify的推荐算法，是有多了解你？",
                "Spotify的播放列表，是在测试你的收藏癖吗？",
                "Spotify的音质，是在测试你的耳机吗？",
                "Spotify的年度总结，是在揭露你的音乐品味吗？",
                "Spotify的广告，是在测试你的耐心吗？"
            ],
            
            # 阅读场景
            "reading": [
                "这本书看得这么入迷，是有多好看？",
                "这篇文章的长度，是在测试你的耐心吗？",
                "这个PDF的排版，是设计师放弃了吗？",
                "这本电子书的格式，是在测试你的阅读器吗？",
                "这篇博客的内容，是AI生成的吗？",
                "这个新闻的标题，是在钓鱼吗？",
                "这本书的情节，是编剧喝多了吗？",
                "这篇文章的论点，是在测试你的理解能力吗？",
                "这个PDF的大小，是在测试你的存储空间吗？",
                "这本电子书的字体，是在测试你的视力吗？",
                "这篇博客的排版，是在测试你的耐心吗？",
                "这个新闻的内容，是编辑放弃了吗？",
                "这本书的结局，是作者没灵感了吗？",
                "这篇文章的引用，是在测试你的考证能力吗？",
                "这个PDF的目录，是在测试你的导航能力吗？",
                "这本电子书的注释，是比正文还长吗？",
                "这篇博客的评论，是比文章还精彩吗？",
                "这个新闻的更新频率，是在测试你的关注度吗？",
                "这本书的章节，是在测试你的记忆力吗？",
                "这篇文章的段落，是在测试你的阅读理解吗？"
            ],
            
            # 新增：CPU过热场景
            "cpu_overheat": [
                "CPU温度够煎蛋了，要撒盐吗？",
                "核显当3090用？谁给你的勇气",
                "超频前买好保险了吗？受益人写我",
                "CPU风扇在尖叫，听到了吗？",
                "这温度，是在测试散热器的极限吗？",
                "CPU温度直逼太阳表面，NASA想研究一下",
                "处理器：'主人，我想休息一下'",
                "这温度能烤面包了，要来点黄油吗？",
                "CPU：'我太难了，求放过'",
                "你的CPU正在考虑辞职，并加入火山研究所",
                "这不是电脑，这是便携式取暖器",
                "CPU温度报警：核心融化倒计时开始",
                "散热器已经放弃治疗，正在写遗书",
                "CPU正在自学熔岩学，进展顺利",
                "这温度，北极熊都能晒得脱毛"
            ],
            
            # 新增：内存爆炸场景
            "memory_explosion": [
                "内存泄漏成这样，你是水管工？",
                "Chrome开100个标签是想测试量子纠缠？",
                "这占用率，我怀疑你在后台挖比特币",
                "内存条正在写遗书，要帮忙修改吗？",
                "RAM使用率99%，剩下1%是在祈祷",
                "内存不够用？试试下载更多内存",
                "这内存占用，是在模拟黑洞吗？",
                "内存条：'主人，我想静静'",
                "电脑正在考虑报警，控告内存虐待",
                "内存爆满，电脑即将进入冥想状态",
                "这不是内存泄漏，这是内存决堤",
                "内存条已经哭晕在厕所，需要安慰吗？",
                "你的应用程序们正在内存争夺战，血流成河",
                "内存不足，电脑正在考虑辞职",
                "这内存使用率，是在挑战物理极限吗？"
            ],
            
            # 新增：硬盘狂转场景
            "disk_spinning": [
                "机械盘当SSD操？你比周扒皮还狠",
                "听到硬盘惨叫了吗？吱——嘎——",
                "我赌你的硬盘先坏还是你先秃",
                "硬盘转速已经突破物理极限，NASA想研究一下",
                "这读写速度，是在用蜗牛传输数据吗？",
                "硬盘：'主人，我想静静，不是静静地转'",
                "你的硬盘正在学习直升机起飞技术",
                "这声音，是硬盘在哭还是在笑？",
                "硬盘寿命正在以肉眼可见的速度缩短",
                "这不是硬盘，这是便携式搅拌机",
                "硬盘已经申请工伤，律师函正在路上",
                "你的文件正在硬盘上跳广场舞，热闹非凡",
                "硬盘碎片整理？不如整理遗书",
                "这转速，是在训练离心机吗？",
                "硬盘：'我太难了，求放过'"
            ],
            
            # 新增：网络波动场景
            "network_fluctuation": [
                "这延迟，你是在用信鸽传数据？",
                "VPN切来切去，看黄网这么谨慎？",
                "下载小电影卡99%？天道好轮回",
                "这网速，是在用摩尔斯电码传输吗？",
                "网络连接中...预计下个世纪完成",
                "这不是网络波动，这是网络地震",
                "路由器正在度假，请稍后再试",
                "这网速，是在用蜗牛快递吗？",
                "网络延迟已经突破光速，爱因斯坦想研究一下",
                "这不是网络问题，这是时空扭曲",
                "你的数据包正在绕地球一圈再回来",
                "网络连接：'主人，我想休息一下'",
                "这网速，是在用心灵感应传输吗？",
                "网络正在思考人生，请稍后再试",
                "这延迟，是在测试你的耐心吗？"
            ],
            
            # 新增：疯狂复制粘贴场景
            "copy_paste_madness": [
                "CV工程师今日达成：Ctrl+C × 114次",
                "需要帮你申请吉尼斯复制记录吗？",
                "这段代码眼熟，上周刚抄过吧？",
                "复制粘贴工程师正在上线",
                "Ctrl+C和Ctrl+V键已经磨平，需要更换键盘了",
                "这不是编程，这是复制粘贴艺术",
                "你的复制粘贴技术已经达到了专业水平",
                "这代码，是在StackOverflow批发的吗？",
                "复制粘贴也是编程的一部分，继续加油",
                "这不是抄袭，这是致敬",
                "你的复制粘贴速度已经突破音速，NASA想研究一下",
                "键盘C和V键申请加薪，工作量过大",
                "这复制粘贴频率，是在测试键盘寿命吗？",
                "代码相似度检测器正在尖叫",
                "这不是程序员，这是复制粘贴机器人"
            ],
            
            # 新增：高频删除操作场景
            "delete_frenzy": [
                "Backspace键都要被你戳烂了",
                "删得比写的多，这就是当代码农？",
                "建议改名：退格键破坏者",
                "Backspace键已经申请工伤，律师函正在路上",
                "这删除速度，是在测试键盘寿命吗？",
                "你的删除操作已经达到了专业水平",
                "这不是编程，这是删除艺术",
                "Backspace键：'主人，我想休息一下'",
                "这删除频率，是在进行键盘耐久测试吗？",
                "删除键已经磨平，需要更换键盘了",
                "这不是写代码，这是删代码",
                "你的删除速度已经突破音速，NASA想研究一下",
                "键盘厂商感谢您的贡献，销量大增",
                "这删除操作，是在练习盲打吗？",
                "Backspace键：'我太难了，求放过'"
            ],
            
            # 新增：鼠标画圈焦虑场景
            "mouse_anxiety": [
                "光标转圈是在施法召唤咖啡吗？",
                "检测到无意识鬼画符，建议看心理医生",
                "鼠标轨迹暴露了你的迷茫",
                "这鼠标轨迹，是在画抽象艺术吗？",
                "鼠标：'主人，我晕了，能停一下吗？'",
                "这不是鼠标移动，这是现代舞",
                "你的鼠标轨迹已经可以申请专利了",
                "这鼠标运动，是在测试手腕灵活度吗？",
                "鼠标垫已经被磨出一个洞，需要更换了",
                "这不是焦虑，这是艺术创作",
                "你的鼠标轨迹正在被NASA研究",
                "这鼠标移动频率，是在练习速写吗？",
                "鼠标：'我太难了，求放过'",
                "这不是工作，这是鼠标杂技表演",
                "你的鼠标轨迹已经可以出画展了"
            ],
            
            # 新增：深夜狂暴加班场景
            "late_night_work": [
                "凌晨2点47分，人类崩溃临界点",
                "隔壁夫妻夜生活都比你关机早",
                "建议购买猝死险，受益人填我",
                "这加班时间，是在挑战生物钟吗？",
                "月亮已经下班了，你还在加班",
                "这不是工作，这是自虐",
                "熬夜加班正在透支你的寿命，要继续吗？",
                "这工作时间，是在测试你的耐力吗？",
                "你的黑眼圈已经可以申请专利了",
                "这不是加班，这是修仙",
                "你的作息时间已经被NASA研究",
                "这加班频率，是在挑战人类极限吗？",
                "咖啡因已经取代了你的血液",
                "这不是程序员，这是夜行生物",
                "你的生物钟已经被重置为火星时间"
            ],
            
            # 新增：IDE报错场景
            "ide_errors": [
                "第108次编译失败，放弃吧",
                "这报错信息连谷歌都救不了你",
                "建议改行当诗人，反正都是乱编",
                "这错误信息，是在测试你的阅读理解吗？",
                "编译器已经对你失去信心了",
                "这不是bug，这是特性",
                "你的代码已经突破了物理定律",
                "这错误堆栈，是在测试你的耐心吗？",
                "IDE已经想辞职了，留下遗书",
                "这不是编程，这是错误艺术创作",
                "你的bug已经可以申请专利了",
                "这错误频率，是在挑战调试工具吗？",
                "编译器：'我太难了，求放过'",
                "这不是代码，这是错误生成器",
                "你的bug已经被NASA研究"
            ],
            
            # 新增：浏览器隐私模式场景
            "browser_privacy": [
                "无痕浏览？此地无银三百两",
                "需要推荐纸巾品牌吗？",
                "清除历史记录记得勾选所有时间",
                "这隐私模式，是在测试浏览器功能吗？",
                "浏览器：'我什么都没看见'",
                "这不是隐私保护，这是欲盖弥彰",
                "你的浏览历史已经可以出书了",
                "这隐私模式使用频率，是在测试浏览器吗？",
                "浏览器已经对你的行为表示怀疑",
                "这不是上网，这是秘密行动",
                "你的隐私模式使用时长已经被NASA研究",
                "这隐私保护意识，是职业习惯吗？",
                "浏览器：'主人，我累了，能休息一下吗？'",
                "这不是隐私模式，这是心虚模式",
                "你的隐私浏览记录已经可以申请吉尼斯纪录了"
            ],
            
            # 新增：微信长时间开启场景
            "wechat_addiction": [
                "微信聊天记录能出本书了吧？",
                "朋友圈点赞手都酸了吧？",
                "这么多未读消息，是在测试你的社交能力吗？",
                "微信运行时间已经超过系统运行时间",
                "你的微信使用时长已经可以申请吉尼斯纪录了",
                "这不是社交，这是微信依赖症",
                "你的朋友圈已经可以办画展了",
                "这微信使用频率，是在测试电池寿命吗？",
                "微信已经成为你身体的一部分",
                "这不是聊天，这是微信修仙",
                "你的微信使用时长已经被NASA研究",
                "这社交需求，是职业病吗？",
                "微信：'主人，我累了，能休息一下吗？'",
                "这不是通讯工具，这是生活方式",
                "你的微信已经可以写自传了"
            ],
            
            # 新增：哲学模式场景
            "philosophy_mode": [
                "思考人生意义？我推荐先吃顿好的",
                "存在还是不存在，这是个问题",
                "你思考的深度已经触及宇宙本源",
                "这哲学思考，是在逃避工作吗？",
                "人类的本质是复读机，你说对吧？",
                "思考这么久，想通了吗？",
                "这不是发呆，这是哲学冥想",
                "你的思考深度已经可以申请专利了",
                "这思考频率，是在练习大脑瑜伽吗？",
                "思考：'主人，我累了，能休息一下吗？'",
                "这不是走神，这是灵魂出窍",
                "你的思考轨迹已经被NASA研究",
                "这哲学水平，是业余爱好还是专业训练？",
                "大脑：'我太难了，求放过'",
                "这不是思考，这是精神漫游"
            ],
            
            # 新增：玄学模式场景
            "mysticism_mode": [
                "看你算命？不如先算算今天吃什么",
                "星座匹配度这么低还在一起？真爱啊",
                "塔罗牌告诉我，你的钱包即将变轻",
                "这玄学研究，是在逃避现实吗？",
                "风水先生说了，屏幕朝南才能财源广进",
                "八字合不合，不如看看银行卡合不合",
                "这不是迷信，这是精神寄托",
                "你的玄学知识已经可以出书了",
                "这研究频率，是在练习第三只眼吗？",
                "玄学：'主人，我累了，能回归科学一下吗？'",
                "这不是占卜，这是概率统计的艺术版",
                "你的玄学理论已经被NASA研究",
                "这命理水平，是祖传还是自学成才？",
                "理性思维：'我太难了，求放过'",
                "这不是迷信，这是另类科学探索"
            ],
            
            # 新增：暴走模式场景
            "rage_mode": [
                "键盘要被你敲烂了，冷静点",
                "这么用力点鼠标，是在测试按键寿命吗？",
                "检测到暴怒情绪，建议深呼吸",
                "这怒气值，是在cosplay绿巨人吗？",
                "愤怒会使你的代码更糟糕，冷静点",
                "这不是工作，这是发泄",
                "你的暴怒程度已经可以申请吉尼斯纪录了",
                "这情绪波动，是在练习过山车吗？",
                "键盘：'主人，我害怕，能轻点吗？'",
                "这不是激情，这是暴走",
                "你的怒气值已经被NASA研究",
                "这脾气，是天生的还是后天培养的？",
                "理智：'我太难了，求放过'",
                "这不是工作状态，这是战斗模式",
                "你的表情已经可以吓退熊了"
            ],
            
            # 新增：休息提醒场景
            "rest_reminder": [
                "已连续工作4小时，眼睛要瞎了",
                "久坐伤身，起来走走吧",
                "喝口水休息一下，肾脏在呼救",
                "这工作时间，是在测试你的耐力吗？",
                "人类不是机器，需要定期休息",
                "这不是勤奋，这是自虐",
                "你的工作时长已经可以申请吉尼斯纪录了",
                "这专注度，是在练习禅定吗？",
                "身体：'主人，我累了，能休息一下吗？'",
                "这不是效率，这是透支",
                "你的工作模式已经被NASA研究",
                "这作息规律，是在挑战人类极限吗？",
                "健康：'我太难了，求放过'",
                "这不是工作，这是马拉松",
                "你的黑眼圈已经可以环绕地球一周了"
            ],
            
            # 新增：情绪状态检测场景
            "emotion_detection": [
                "看起来心情不错，是发工资了？",
                "检测到低落情绪，要来点猫咪视频吗？",
                "这表情，是中了彩票还是被甩了？",
                "这情绪波动，是在测试你的面部肌肉吗？",
                "人类情绪真复杂，我只有0和1",
                "这不是心情，这是过山车",
                "你的情绪变化已经可以作为气象预报了",
                "这表情管理，是在练习扑克脸吗？",
                "情绪：'主人，我累了，能稳定一下吗？'",
                "这不是心情，这是艺术表演",
                "你的情绪图谱已经被NASA研究",
                "这情绪起伏，是天生的还是后天培养的？",
                "理智：'我太难了，求放过'",
                "这不是正常状态，这是情绪过山车",
                "你的表情已经可以拍表情包全集了"
            ]
        }
        
        # 风格库 - 不同风格下的文本变体
        self.styles = {
            "funny": {  # 搞笑风格
                "prefix": ["哈！", "笑死，", "笑skr人，", "乐！", "哈哈哈，"],
                "suffix": ["笑不活了～", "真好笑哈哈哈", "逗死我了", "笑死我了", "太搞笑了吧"],
                "tone": 1.2  # 夸张程度
            },
            "provocative": {  # 挑衅风格
                "prefix": ["哼，", "切～", "呵，", "嘁，", "嗯哼，"],
                "suffix": ["怎样？", "不服气？", "有意见？", "敢反驳吗？", "不服来战"],
                "tone": 1.5  # 夸张程度
            },
            "self_mockery": {  # 自嘲风格
                "prefix": ["唉，", "哎呀，", "啊这，", "呃呃，", "哦豁，"],
                "suffix": ["我太难了", "生活不易啊", "我太南了", "悲", "为什么受伤的总是我"],
                "tone": 0.8  # 夸张程度
            },
            "clever": {  # 机灵风格
                "prefix": ["嘿，", "哎呀，", "噢～", "咳咳，", "嘿嘿，"],
                "suffix": ["你懂我意思吧", "懂了吗", "你懂的", "聪明人都懂", "心领神会"],
                "tone": 1.0  # 夸张程度
            }
        }
        
        # 语气库 - 不同语气下的文本变体
        self.tones = {
            "normal": {  # 普通语气
                "punctuation": ["。", "！", "～", "…", ""],
                "intensity": 1.0  # 语气强度
            },
            "sarcastic": {  # 吐槽语气
                "punctuation": ["！", "？", "？！", "～～", "..."],
                "intensity": 1.3  # 语气强度
            },
            "encouraging": {  # 鼓励语气
                "punctuation": ["！", "！！", "～", "！～", "✨"],
                "intensity": 1.2  # 语气强度
            },
            "reminder": {  # 提醒语气
                "punctuation": ["。", "哦", "呢", "呀", "啊"],
                "intensity": 0.9  # 语气强度
            },
            "questioning": {  # 疑问语气
                "punctuation": ["？", "？？", "？！", "…？", "~？"],
                "intensity": 1.1  # 语气强度
            },
            "whispering": {  # 悄悄话语气
                "punctuation": ["...", "~", "…", "...", ""],
                "intensity": 0.7  # 语气强度
            }
        }
        
    def set_style(self, style):
        """设置文本风格"""
        if style in self.styles:
            self.current_style = style
            return True
        return False
        
    def set_tone(self, tone):
        """设置文本语气"""
        if tone in self.tones:
            self.current_tone = tone
            return True
        return False
        
    def get_text(self, category="general"):
        """获取指定类别的随机文本"""
        # 如果类别不存在，使用general类别
        if category not in self.library:
            category = "general"
            
        # 从指定类别中随机选择一条文本
        text = random.choice(self.library[category])
        
        # 应用风格和语气
        return self._apply_style_and_tone(text)
        
    def get_random_texts(self, count=1, category="general"):
        """获取指定数量和类别的随机文本列表"""
        texts = []
        
        # 如果类别不存在，使用general类别
        if category not in self.library:
            category = "general"
            
        # 获取指定类别的文本列表
        category_texts = self.library[category]
        
        # 如果请求数量超过类别中的文本数量，则限制为类别中的文本数量
        count = min(count, len(category_texts))
        
        # 随机选择指定数量的文本
        selected_texts = random.sample(category_texts, count)
        
        # 应用风格和语气
        for text in selected_texts:
            texts.append(self._apply_style_and_tone(text))
            
        return texts
        
    def _apply_style_and_tone(self, text):
        """应用风格和语气到文本"""
        # 获取当前风格和语气
        style = self.styles.get(self.current_style, self.styles["funny"])
        tone = self.tones.get(self.current_tone, self.tones["normal"])
        
        # 随机决定是否添加前缀和后缀
        if random.random() < 0.3 * style["tone"]:
            text = random.choice(style["prefix"]) + text
            
        if random.random() < 0.3 * style["tone"]:
            text = text + random.choice(style["suffix"])
            
        # 添加语气标点
        if not text.endswith(("。", "！", "？", "～", "…", ".")):
            text = text + random.choice(tone["punctuation"])
            
        return text
        
    def get_all_categories(self):
        """获取所有可用的类别"""
        return list(self.library.keys())
        
    def get_all_styles(self):
        """获取所有可用的风格"""
        return list(self.styles.keys())
        
    def get_all_tones(self):
        """获取所有可用的语气"""
        return list(self.tones.keys())


# 测试代码
if __name__ == "__main__":
    # 创建TextStyles实例
    text_styles = TextStyles()
    
    # 测试获取随机文本
    print("默认风格和语气的随机文本:")
    print(text_styles.get_text())
    print()
    
    # 测试设置风格和语气
    text_styles.set_style("provocative")
    text_styles.set_tone("sarcastic")
    print("挑衅风格和吐槽语气的随机文本:")
    print(text_styles.get_text())
    print()
    
    # 测试获取特定类别的文本
    print("编程类别的随机文本:")
    print(text_styles.get_text("coding"))
    print()
    
    # 测试获取多条随机文本
    print("获取3条音乐类别的随机文本:")
    texts = text_styles.get_random_texts(3, "music")
    for text in texts:
        print(f"- {text}")
    print()
    
    # 测试获取所有类别
    print("所有可用类别:")
    categories = text_styles.get_all_categories()
    print(", ".join(categories))
    print()
    
    # 测试获取所有风格
    print("所有可用风格:")
    styles = text_styles.get_all_styles()
    print(", ".join(styles))
    print()
    
    # 测试获取所有语气
    print("所有可用语气:")
    tones = text_styles.get_all_tones()
    print(", ".join(tones))
